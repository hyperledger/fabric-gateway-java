# Copyright IBM Corp. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0

# Pipeline-level keywords belong here
trigger:
- release-1.4

pr:
  - release-1.4

pool:
  vmImage: 'ubuntu-18.04'

variables:
- group: Gateway_Java_Vars
- name: ORG_HYPERLEDGER_FABRIC_SDK_PROPOSAL_WAIT_TIME
  value: '55000'
- name: ORG_HYPERLEDGER_FABRIC_SDK_CHANNELCONFIG_WAIT_TIME
  value: '20000'
- name: ORG_HYPERLEDGER_FABRIC_SDK_CLIENT_TRANSACTION_CLEANUP_UP_TIMEOUT_WAIT_TIME
  value: '65000'
- name: ORG_HYPERLEDGER_FABRIC_SDK_ORDERER_ORDERERWAITTIMEMILLISECS
  value: '180000'
- name: ORG_HYPERLEDGER_FABRIC_SDK_PEER_EVENTREGISTRATION_WAIT_TIME
  value: '180000'
- name: ORG_HYPERLEDGER_FABRIC_SDK_EVENTHUB_CONNECTION_WAIT_TIME
  value: '180000'
- name: ORG_HYPERLEDGER_FABRIC_SDK_CHANNEL_GENESISBLOCK_WAIT_TIME
  value: '180000'

# A Pipeline contains one or more stages
# A stage is a related collection of jobs. By default stages run sequentially
# A job is a collection of steps run by an agent or server

stages:
  - stage: RunTests
    displayName: Run Tests
    jobs: 
    - job: RunTests
      displayName: Run tests on
      strategy:
        matrix:
          Java8:
            versionSpec: '1.8'
            sslProvider: 'openSSL'
          Java11:
            versionSpec: '1.11'
            sslProvider: 'JDK'           
      steps:
      - task: Maven@3
        displayName: Maven build and run tests
        env:
          ORG_HYPERLEDGER_FABRIC_SDK_CONNECTIONS_SSL_SSLPROVIDER: '$(sslProvider)'
        inputs:
          mavenPomFile: 'pom.xml'
          goals: 'clean install'
          javaHomeOption: 'JDKVersion'
          jdkVersionOption: "$(versionSpec)"

  - stage: PublishDocs
    displayName: Publish API documentation
    jobs:
    - job: PublishDocs
      displayName: Publish API documentation
      condition: and(succeeded(), eq(variables['Build.Reason'], 'IndividualCI'))
      steps:
        - task: Maven@3
          displayName: Maven compile
          inputs:
            mavenPomFile: 'pom.xml'
            goals: 'clean install -DskipTests'
        - script: scripts/ci_scripts/publishJavaApiDocs.sh
          displayName: Publish API documentation
          env:
            GITHUB_USER: 'Hyperledger Bot'
            GITHUB_EMAIL: 'hlfdev.azp@gmail.com'
            PUBLISH_URL: "https://$(GITHUB-PAT)@github.com/hyperledger/fabric-gateway-java.git"
            PROJECT_DIR: "$(Build.Repository.LocalPath)"
            STAGING_DIR: "$(Build.StagingDirectory)/gh-pages"
            SOURCE_BRANCH: "$(Build.SourceBranchName)"
